{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-cli-deploy-github-pages-test/app.js","ember-cli-deploy-github-pages-test/components/app-version.js","ember-cli-deploy-github-pages-test/controllers/array.js","ember-cli-deploy-github-pages-test/controllers/object.js","ember-cli-deploy-github-pages-test/initializers/app-version.js","ember-cli-deploy-github-pages-test/initializers/export-application-global.js","ember-cli-deploy-github-pages-test/router.js","ember-cli-deploy-github-pages-test/templates/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('ember-cli-deploy-github-pages-test/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'ember-cli-deploy-github-pages-test/config/environment'], function (exports, _ember, _emberResolver, _emberLoadInitializers, _emberCliDeployGithubPagesTestConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _emberCliDeployGithubPagesTestConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _emberCliDeployGithubPagesTestConfigEnvironment['default'].podModulePrefix,\n    Resolver: _emberResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _emberCliDeployGithubPagesTestConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('ember-cli-deploy-github-pages-test/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'ember-cli-deploy-github-pages-test/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _emberCliDeployGithubPagesTestConfigEnvironment) {\n\n  var name = _emberCliDeployGithubPagesTestConfigEnvironment['default'].APP.name;\n  var version = _emberCliDeployGithubPagesTestConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('ember-cli-deploy-github-pages-test/controllers/array', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('ember-cli-deploy-github-pages-test/controllers/object', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('ember-cli-deploy-github-pages-test/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'ember-cli-deploy-github-pages-test/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _emberCliDeployGithubPagesTestConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_emberCliDeployGithubPagesTestConfigEnvironment['default'].APP.name, _emberCliDeployGithubPagesTestConfigEnvironment['default'].APP.version)\n  };\n});","define('ember-cli-deploy-github-pages-test/initializers/export-application-global', ['exports', 'ember', 'ember-cli-deploy-github-pages-test/config/environment'], function (exports, _ember, _emberCliDeployGithubPagesTestConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_emberCliDeployGithubPagesTestConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var value = _emberCliDeployGithubPagesTestConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_emberCliDeployGithubPagesTestConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('ember-cli-deploy-github-pages-test/router', ['exports', 'ember', 'ember-cli-deploy-github-pages-test/config/environment'], function (exports, _ember, _emberCliDeployGithubPagesTestConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _emberCliDeployGithubPagesTestConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n});","define(\"ember-cli-deploy-github-pages-test/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.11\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"ember-cli-deploy-github-pages-test/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1, \"id\", \"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember!!!!???!!\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        return morphs;\n      },\n      statements: [[\"content\", \"outlet\", [\"loc\", [null, [3, 0], [3, 10]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('ember-cli-deploy-github-pages-test/config/environment', ['ember'], function(Ember) {\n  var prefix = 'ember-cli-deploy-github-pages-test';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (!runningTests) {\n  require(\"ember-cli-deploy-github-pages-test/app\")[\"default\"].create({\"name\":\"ember-cli-deploy-github-pages-test\",\"version\":\"0.0.0+3e1e6a21\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-cli-deploy-github-pages-test.js"}